name: FluidNC Release Builder

on:
  push:
    branches:
      - main
    tags:
      - 'v*'        # otomatis bikin release kalau ada tag versi
  pull_request:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release version (e.g. v3.7.15)'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Cache pip
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Cache PlatformIO
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # Install PlatformIO
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    # Build semua environment ESP32 (tanpa S3 dulu, karena error)
    - name: Build all firmware
      run: pio run -e wifi -e bt -e noradio

    # Build LittleFS (opsional)
    - name: Build LittleFS filesystem
      run: pio run -t buildfs -e wifi -e bt -e noradio
      continue-on-error: true

    # List hasil build
    - name: List build outputs
      run: ls -lh .pio/build/*/

    # Upload ke Release kalau ada tag
    - name: Upload binaries to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        overwrite: true
        files: |
          .pio/build/*/*.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
